apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "human-call-filter.fullname" . }}
  labels:
    app: {{ include "human-call-filter.name" . }}
    chart: {{ include "human-call-filter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "human-call-filter.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "human-call-filter.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "CALLS_HTTP_PORT"
              value: "80"
            - name: "DESTINATION_NUMBER"
              valueFrom:
                secretKeyRef:
                  name: {{ include "human-call-filter.fullname" . }}-secrets
                  key: destination_number
            - name: "DB_HOST"
              value: {{ .Values.db.host }}
            - name: "DB_PORT"
              value: "{{ .Values.db.port }}"
            - name: "DB_NAME"
              value: {{ .Values.db.name }}
            - name: "DB_USERNAME"
              value: {{ .Values.db.username }}
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "human-call-filter.fullname" . }}-secrets
                  key: password
          ports:
            - name: calls
              containerPort: 80
              protocol: TCP
            - name: dashboard
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: calls
            httpGet:
              path: /healthz
              port: dashboard
          readinessProbe:
            httpGet:
              path: /healthz
              port: calls
            httpGet:
              path: /healthz
              port: dashboard
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                     "-instances={{ .Values.gcp.cloudsql.connectionName }}=tcp:5432",
                     "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: {{ include "human-call-filter.fullname" . }}-cloudsql-instance-credentials
